resources:
  pipelines: 
  - pipeline: _Build Image Release Artefacts
    source: 'Build Image Release Artefacts  3.0'

  repositories:
  - repository: _lansa_aws-templates
    type: github
    endpoint: hirendra-singh
    name: hirendra-singh/aws-templates
    ref: feature/hiren-aws-yaml-release
  
  - repository: _lansa_aws-templates-mp
    type: github
    endpoint: hirendra-singh
    name: hirendra-singh/aws-templates
    ref: support/scalable_marketplace


  - repository: _robe070_cookbooks
    endpoint: robe070
    type: github
    name: "s/_robe070/cookbooks"
    ref: debug/paas
 
  # - repository: _robe070_cookbooks
  #   endpoint: robe070
  #   type: github
  #   name: hirendra-singh/cookbooks
  #   ref: hiren/aws-template-release-3.0  

variables:
  - name: CookbooksSource
    value: $(Build.Repository.LocalPath)\cookbooks
  - name: CookbooksSource1
    value: c:\lansa
  - name: jpnLanguage
    value: JPN
  # - name: GitAwsTemplateMarketPlaceBranch-del
  #   value: support/scalable_marketplace
  # - name: GitAwsTemplatescalableBranch-del
  #   value: support/scalable
  # - name: GitCookBooksGitHubName-x
  #   value: github.com/robe070/cookbooks
  # - name: GitLansaAwsTemplatesGitHubName-x
  #   value: github.com/lansa/aws-templates
  # - name: GitLansaAwsTemplatesPAT-x
  #   value: ccc
  # - name: GitLansaAwsTemplatesRepoName-x
  #   value: _lansa_aws-templates-mp
  # - name: GitRepoUserEmail-x
  #   value: lansacloud@lansa.com.au
  # - name: GitRepoUserName-x
  #   value: LansaCloud
  - name: LansaReleaseTemplateUrl
    value: https://raw.githubusercontent.com/lansa/aws-templates/support/scalable/CloudFormationWindows/lansa-master-win.cfn.template
  - name: RegressionTestRegion
    value: ap-southeast-2                              
  - group: "Template Parameters"
  - group: "VPC ap-southeast-2"
  - group: "VPC us-east-1"
  - group: "VPC us-west-1"
  - group: "VPC us-west-2"
  - group: "VPC ap-northeast-1"
  - group: "VPC eu-west-2"
  - group: "VPC eu-west-3"
  - group: "VPC us-east-2"
  - group: "VPC ca-central-1"
  - group: "VPC eu-central-1"
  - group: "VPC eu-west-1"
  - group: "VPC eu-north-1"
  - group: "VPC ap-south-1"
  - group: "VPC ap-east-1"
  - group: "VPC eu-south-1"
  - group: "VPC me-south-1"
  - group: "S3 uploads"
  - group: "Git Repos"
  - group: "Logins"
  - group: "ImageVersion"

stages: 
- stage: "MergePatchPaas"
  displayName: Merge patch/pass
  jobs:
    - job: Job_1
      displayName: 'Agent job'
      timeoutInMinutes: 0
      pool:
          vmImage: windows-2022
      steps:     
        - checkout: self

        - checkout: _robe070_cookbooks
          displayName: checkout rob cookbooks
          path: _robe070_cookbooks
      
        - task: PowerShell@2
          displayName: 'Write access to Git Repo (robe070/cookbooks)'
          inputs:
            targetType: filePath
            filePath: '$(System.DefaultWorkingDirectory)/_robe070_cookbooks/scripts/GitRepoWriteAccess.ps1'
            arguments: '-GitBranch ''$(CookbooksBranch)'' -GitURL ''https://$(GitLansaAwsTemplatesPAT):x-oauth-basic@$(GitCookbooksGitHubName)'' -GitUserEmail ''$(GitRepoUserEmail)'' -GitUserName ''$(GitRepoUserName)'' -GitRepoName ''$(CookbooksSourceAlias)'''

        - task: PowerShell@2
          displayName: 'Merge robe070/cookbooks repo debug/paas to patch/paas'
          inputs:
            targetType: filePath
            filePath: '$(System.DefaultWorkingDirectory)/_robe070_cookbooks/scripts/GitMerge.ps1'
            arguments: '-GitRepoName ''$(CookbooksSourceAlias)'' -GitSourceBranch ''$(CookbooksBranch)'' -GitTargetBranch ''$(CookbooksBranchPreview)''' 

- stage: S3PatchPAAS
  displayName: S3 patch/paas
  dependsOn: MergePatchPAAS
  jobs:
    - job: Job_1
      displayName: Agent job
      pool: 
          vmImage: windows-2022
      steps:
        - checkout: self
        - checkout: _lansa_aws-templates
          path: "s/_lansa_aws-templates" 
        - task: AmazonWebServices.aws-vsts-tools.S3Upload.S3Upload@1
          displayName: 'S3 Upload: $(BucketNamePreview)'
          inputs:
            awsCredentials: AzureDevOps
            regionName: 'ap-southeast-2'
            bucketName: '$(BucketNamePreview)'
            sourceFolder: '$(System.DefaultWorkingDirectory)/_lansa_aws-templates/CloudFormationWindows'
            globExpressions: '*.template'
            targetFolder: '$(FolderNamePreview)'
            filesAcl: 'public-read'

# - template: AzureDevOps/templates/TestPublishTemplate.yml
#   parameters:
#     stageName: 'AUSSmallShoeSizew16d_14_2'
#     stagedisplayName: AUS Small Shoe Size w16d-14-2
#     dependsOn: S3PatchPAAS
#     jobName: AgentJob_SmallStack
#     jobDisplayname: 'Agent job: Small Stack'
#     baseImageName: w16d-14-2
#     stackName: AUS-Small
#     LansaVersion: $(LansaVersionPrevious)
#     WebserverOSVersion: $(WebserverOSPreviousVersionValue)


# - template: AzureDevOps/templates/TestPublishTemplate.yml
#   parameters:
#     stageName: 'AUSTestShoeSizew16d_15_0'
#     stagedisplayName: 'AUS Test Shoe Size w16d-15-0'
#     dependsOn: S3PatchPAAS
#     jobName: AgentJob_TestStack
#     jobDisplayname: 'Agent job: Test Stack'
#     baseImageName: w16d-15-0
#     stackName: AUS-Test
#     LansaVersion: $(lansaVersion)
#     WebserverOSVersion: $(WebserverOSPreviousVersionValue)
    

# - template: AzureDevOps/templates/TestPublishTemplate.yml
#   parameters:
#     stageName: 'AUSDevShoeSizew19d_14_2'
#     stagedisplayName: 'AUS Dev Shoe Size w19d-14-2s'
#     dependsOn: S3PatchPAAS
#     jobName: AgentJob_DevStack
#     jobDisplayname: 'Agent job: Dev Stack'
#     baseImageName: w19d-14-2s
#     stackName: AUS-Dev
#     LansaVersion: $(LansaVersionPrevious)
#     WebserverOSVersion: $(WebserverOSLatestVersionValue)

# - template: AzureDevOps/templates/TestPublishTemplate.yml
#   parameters:
#     stageName: 'AUSVPCTestsw19d_15_0'
#     stagedisplayName: AUS VPC Tests w19d-15-0
#     dependsOn: S3PatchPAAS
#     jobName: AgentJob_VpcStack
#     jobDisplayname: 'Agent job: Vpc Stack'
#     baseImageName: w19d-15-0
#     stackName: AUS-VPC
#     LansaVersion: $(lansaVersion)
#     WebserverOSVersion: $(WebserverOSLatestVersionValue)

# - template: AzureDevOps/templates/TestPublishTemplate.yml
#   parameters:
#     stageName: 'AUSMediumShoeSizew16d_14_2j'
#     stagedisplayName: AUS Medium Shoe Size w16d-14-2j
#     dependsOn: S3PatchPAAS
#     jobName: AgentJob_MediumStack
#     jobDisplayname: 'Agent job: Medium Stack'
#     baseImageName: w16d-14-2j
#     stackName: AUS-Medium
#     LansaVersion: $(LansaVersionPrevious)
#     WebserverOSVersion: $(WebserverOSJpnPreviousVersionValue)

# - template: AzureDevOps/templates/TestPublishTemplate.yml
#   parameters:
#     stageName: 'AUSLargeShoeSizew16d_15_0j'
#     stagedisplayName: AUS Large Shoe Size w16d-15-0j
#     dependsOn: S3PatchPAAS
#     jobName: AgentJob_LargeStack
#     jobDisplayname: 'Agent job: Large Stack'
#     baseImageName: w16d-15-0j
#     stackName: AUS-Large
#     LansaVersion: $(lansaVersion)
#     WebserverOSVersion: $(WebserverOSJpnPreviousVersionValue)

# - template: AzureDevOps/templates/TestPublishTemplate.yml
#   parameters:
#     stageName: 'AUSUpdateScriptsFALSEw19d_14_2j'
#     stagedisplayName: AUS Update Scripts FALSE w19d-14-2j
#     dependsOn: S3PatchPAAS
#     jobName: AgentJob_UpdateFalseStack
#     jobDisplayname: 'Agent job: Update False Stack'
#     baseImageName: w19d-14-2j
#     stackName: AUS-UpdateScripts
#     LansaVersion: $(LansaVersionPrevious)
#     WebserverOSVersion: $(WebserverOSJpnLatestVersionValue)

# - template: AzureDevOps/templates/TestPublishTemplate.yml
#   parameters:
#     stageName: 'AUSJPNVPCTestsw19d_15_0j'
#     stagedisplayName: AUS JPN VPC Tests w19d-15-0j
#     dependsOn: S3PatchPAAS
#     jobName: AgentJob_VpcStack
#     jobDisplayname: 'Agent job: Vpc Stack'
#     baseImageName: w19d-15-0j
#     stackName: AUS-JPN-VPC
#     LansaVersion: $(lansaVersion)
#     WebserverOSVersion: $(WebserverOSJpnLatestVersionValue)

# - stage: MergeToMarketplaceAndUpload
#   displayName: Merge To Marketplace & Upload
#   dependsOn: 
#     - AUSSmallShoeSizew16d_14_2
#     - AUSTestShoeSizew16d_15_0
#     - AUSDevShoeSizew19d_14_2
#     - AUSVPCTestsw19d_15_0
#     - AUSMediumShoeSizew16d_14_2j
#     - AUSLargeShoeSizew16d_15_0j
#     - AUSUpdateScriptsFALSEw19d_14_2j
#     - AUSJPNVPCTestsw19d_15_0j
#   jobs:
#   - job: Job_1
#     displayName: 'Agent Job'
#     pool: 
#       vmImage: windows-2022
#     steps:
#       - checkout: self
#       - checkout: _robe070_cookbooks
#         path: "s/_robe070_cookbooks"
#       - checkout: _lansa_aws-templates-mp
#         path: "s/_lansa_aws-templates-mp" 
#       - task: PowerShell@2
#         displayName: 'Write access to Git Repo (lansa/aws-templates)'
#         inputs:
#           targetType: filePath
#           filePath: '$(System.DefaultWorkingDirectory)/_robe070_cookbooks/scripts/GitRepoWriteAccess.ps1'
#           arguments: '-GitBranch ''$(GitLansaAwsTemplatesMarketPlaceBranch)'' -GitURL ''https://$(GitLansaAwsTemplatesPAT):x-oauth-basic@$(GitLansaAwsTemplatesGitHubName)'' -GitUserEmail ''$(GitRepoUserEmail)'' -GitUserName ''$(GitRepoUserName)'' -GitRepoName ''$(GitLansaAwsTemplatesRepoName)'''
#           pwsh: true
  
#       - task: PowerShell@2
#         displayName: 'Merge support/scalable into support/scalable_marketplace'
#         inputs:
#           targetType: filePath
#           filePath: '$(System.DefaultWorkingDirectory)/_robe070_cookbooks/scripts/GitMerge.ps1'
#           arguments: '-GitRepoName ''$(GitLansaAwsTemplatesRepoName)'' -GitSourceBranch ''$(GitLansaAwsTemplatesBranch)'' -GitTargetBranch ''$(GitLansaAwsTemplatesMarketPlaceBranch)'''
#           pwsh: true

#       - task: AmazonWebServices.aws-vsts-tools.S3Upload.S3Upload@1
#         displayName: 'S3 Upload to support/scalable'
#         inputs:
#           awsCredentials: AzureDevOps
#           regionName: 'ap-southeast-2'
#           bucketName: '$(BucketNameProduction)'
#           sourceFolder: '$(System.DefaultWorkingDirectory)/_lansa_aws-templates-mp/CloudFormationWindows'
#           globExpressions: '*.template'
#           targetFolder: '$(FolderNameProduction)'
#           filesAcl: 'public-read'

# - template: AzureDevOps/templates/TestPublishTemplate.yml
#   parameters:
#     stageName: 'ValidateTemplateURLs'
#     stagedisplayName: Validate Template URLs
#     dependsOn: MergeToMarketplaceAndUpload
#     jobName: AgentJob_SmallStack
#     jobDisplayname: 'Agent job: Small Stack'
#     baseImageName: w19d-15-0
#     stackName: Validate-TemplateUrl
#     LansaVersion: $(LansaVersion)
#     WebserverOSVersion: $(WebserverOSLatestVersionValue)

# - stage: SubmittoAWSAndWaitforPreview
#   displayName: 'Submit to AWS & Wait for Preview'
#   dependsOn: ValidateTemplateURLs
#   jobs: 
#   - job: 'Job_1'
#     displayName: 'Agentless Job'
#     pool: server
#     steps:
#     - task: ManualIntervention@8
#       displayName: 'Manual Intervention : Submit Artefacts'
#       inputs:
#         instructions: |
#           Submit artefacts to AWS
#           1. Check that the master template has been updated with AMI IDs in the Image CD pipeline. Compare with the Product Load Form. Also check that the TemplateUrl properties are a single url, and not a condition. https://lansa.s3.ap-southeast-2.amazonaws.com/templates/support/scalable/lansa-master-win.cfn.template
#           2. Upload Product Load Form to AWS Marketplace. 
#           3. This should have been updated with AMI IDs in the Image CD pipeline. Check that this has occurred. 
#           4. Wait for response from AWS Marketplace. 
#           5. Using the url provided in the response from AWS Marketplace, navigate to deploy the latest version of the stack on CloudFormation. It will show the url of the stack type template. Copy this url.
#           6. Put the url in a file called TemplateUrl.txt. The casing must be ExactLy that specified.
#           7. Upload the TemplateUrl.txt file to s3://lansa/templates/support/scalable/marketplace/
          
#           Also refer to "Inputting a Template URL" section in the wiki: https://github.com/robe070/cookbooks/wiki/AWS-Release-Pipelines-High-Level-View)

# - template: AzureDevOps/templates/TestPublishTemplate1.yml
#   parameters:
#     stageName: ParisPrevieww16d_14_2
#     stagedisplayName: Paris Preview w16d-14-2
#     dependsOn: SubmittoAWSAndWaitforPreview
#     jobName: AgentJob_ParisDeploymentTest 
#     jobDisplayname: 'Agent job: Paris Deployment Test'
#     baseImageName: w16d-14-2
#     stackName: Paris-Preview
#     LansaVersion: $(LansaVersionPrevious)
#     WebserverOSVersion: $(WebserverOSPreviousVersionValue)

# - template: AzureDevOps/templates/TestPublishTemplate1.yml
#   parameters:
#     extraSteps: true
#     stageName: OregonPrevieww16d_15_0
#     stagedisplayName: Oregon Preview w16d-15-0
#     dependsOn: SubmittoAWSAndWaitforPreview
#     jobName: AgentJob_USWest2_Oregon_DeploymentTest  
#     jobDisplayname: 'Agent job: US us-west-2 (Oregon) Deployment Test'
#     baseImageName: w16d-15-0
#     stackName: Oregon-Preview
#     LansaVersion: $(LansaVersion)
#     WebserverOSVersion: $(WebserverOSPreviousVersionValue)

# - template: AzureDevOps/templates/TestPublishTemplate1.yml
#   parameters:
#     extraSteps: true
#     stageName: TokyoPrevieww19d_14_2
#     stagedisplayName: Tokyo Preview w19d-14-2
#     dependsOn: SubmittoAWSAndWaitforPreview
#     jobName: AgentJob_AsiaPacific_Tokyo_DeploymentTest
#     jobDisplayname: 'Agent job: Asia Pacific (Tokyo) Deployment Test'
#     baseImageName: w19d-14-2
#     stackName: Tokyo-Preview
#     LansaVersion: $(LansaVersionPrevious)
#     WebserverOSVersion: $(WebserverOSLatestVersionValue)

# - template: AzureDevOps/templates/TestPublishTemplate1.yml
#   parameters:
#     extraSteps: true
#     stageName: N_Virginia_Preview_w19d_15_0
#     stagedisplayName: N. Virginia Preview w19d-15-0
#     dependsOn: SubmittoAWSAndWaitforPreview
#     jobName: AgentJob_NVirginia_Deployment_Test 
#     jobDisplayname: 'Agent job : N. Virginia [us-east-1] Deployment Test'
#     baseImageName: w19d-15-0
#     stackName: N-Virginia-Preview
#     LansaVersion: $(LansaVersion)
#     WebserverOSVersion: $(WebserverOSLatestVersionValue)

# - template: AzureDevOps/templates/TestPublishTemplate1.yml
#   parameters:
#     extraSteps: true
#     stageName: LondonPreview_w19d_15_0j
#     stagedisplayName: London Preview w19d-15-0j
#     dependsOn: SubmittoAWSAndWaitforPreview
#     jobName: AgentJob_Europe_London_Deployment_Test 
#     jobDisplayname: 'Agent job : Europe (London) Deployment Test'
#     baseImageName: w19d-15-0j
#     stackName: London-Preview
#     LansaVersion: $(LansaVersion)
#     WebserverOSVersion: $(WebserverOSJpnLatestVersionValue)

# - template: AzureDevOps/templates/TestPublishTemplate1.yml
#   parameters:
#     extraSteps: true
#     stageName: N_CaliforniaPreview_w16d_14_2j
#     stagedisplayName: N. California Preview w16d-14-2j
#     dependsOn: SubmittoAWSAndWaitforPreview
#     jobName: AgentJob_US_uswest1_Deployment_Test
#     jobDisplayname: 'Agent job : US [us-west-1] Deployment Test'
#     baseImageName: w16d-14-2j
#     stackName: N-California-Preview
#     LansaVersion: $(LansaVersionPrevious)
#     WebserverOSVersion: $(WebserverOSJpnPreviousVersionValue)

# - template: AzureDevOps/templates/TestPublishTemplate1.yml
#   parameters:
#     extraSteps: true
#     stageName: MumbaiPreview_w19d_14_2j
#     stagedisplayName: Mumbai Preview w19d-14-2j
#     dependsOn: SubmittoAWSAndWaitforPreview
#     jobName: AgentJob_Mumbai_Deployment_Test 
#     jobDisplayname: 'Agent job : Mumbai Deployment Test'
#     baseImageName: w19d-14-2j
#     stackName: Mumbai-Preview
#     LansaVersion: $(LansaVersionPrevious)
#     WebserverOSVersion: $(WebserverOSJpnLatestVersionValue)

# - template: AzureDevOps/templates/TestPublishTemplate1.yml
#   parameters:
#     extraSteps: true
#     stageName: HongKongPreview_w16d_15_0j
#     stagedisplayName: Hong Kong Preview w16d-15-0j
#     dependsOn: SubmittoAWSAndWaitforPreview
#     jobName: AgentJob_HongKong_Deployment_Test 
#     jobDisplayname: 'Agent job : Hong Kong Deployment Test'
#     baseImageName: w16d-15-0j
#     stackName: Hong-Kong-Preview
#     LansaVersion: $(LansaVersion)
#     WebserverOSVersion: $(WebserverOSJpnPreviousVersionValue)

# - stage: WaitForLive
#   displayName: Wait For Live
#   dependsOn:
#   - ParisPrevieww16d_14_2
#   - OregonPrevieww16d_15_0
#   - TokyoPrevieww19d_14_2
#   - N_Virginia_Preview_w19d_15_0
#   - LondonPreview_w19d_15_0j
#   - N_CaliforniaPreview_w16d_14_2j
#   - MumbaiPreview_w19d_14_2j
#   - HongKongPreview_w16d_15_0j
#   jobs:
#   - job: Job_1
#     displayName: 'Agentless Job'
#     pool: server
#     steps:     
#     - task: ManualIntervention@8
#       displayName: 'Manual Intervention : Merge & Go Live'
#       inputs:
#         instructions: |
#           Preview tests have completed successfully.        
#           Ready to go live.        
#           Merge cookbooks patch/paas to support/scalable         
#           Click the button to go live.        
#           Note that once the first template has been published that there is no preview stage. Its live straightaway. When/if that occurs, only the merge is required, then this stage can be continued. Consideration should be made of moving this Stage merge before the "Marketplace URL tests" and doing the merge then.
      
# - stage: MergeAndTag
#   displayName: Merge & Tag
#   dependsOn:
#     - WaitForLive
#   jobs:
#   - job: Job_1
#     displayName: 'Agent job : Dev Stack'
#     timeoutInMinutes: 120
#     pool:
#       vmImage: windows-2022
#     steps:
#     - task: AmazonWebServices.aws-vsts-tools.AWSPowerShellModuleScript.AWSPowerShellModuleScript@1
#       displayName: 'Artifact Check : Set Gate Variable'
#       inputs:
#         awsCredentials: $(awsCredentials)
#         regionName: $(RegressionTestRegion)
#         arguments: '-BaseImageName ''w19d-15-0'' -stackname ''w19d-15-0-IMG'''
#         filePath: '$(System.DefaultWorkingDirectory)/_lansa_aws-templates/scripts/SetGateVariable.ps1'

#     - pwsh: |
#        # Print the Gate variables.
#        Write-Host "Gate.IsEnabled: $(Gate.IsEnabled); Gate.ImageID: $(Gate.ImageID); Gate.version:$(Gate.version); Gate.stack:$(Gate.stack)"| Out-Default
#        displayName: 'Artifact Check : Output Gate Variable'
      
#     - task: PowerShell@2
#       displayName: 'Write access to Git Repo (robe070/cookbooks)'
#       inputs:
#         targetType: filePath
#         filePath: './$(System.DefaultWorkingDirectory)/_robe070_cookbooks/scripts/GitRepoWriteAccess.ps1'
#         arguments: '-GitBranch ''$(CookbooksBranchPreview)'' -GitURL ''https://$(GitLansaAwsTemplatesPAT):x-oauth-basic@$(GitCookbooksGitHubName)'' -GitUserEmail ''$(GitRepoUserEmail)'' -GitUserName ''$(GitRepoUserName)'' -GitRepoName ''$(CookbooksSourceAlias)'''
#         pwsh: true
      
#     - task: PowerShell@2
#       displayName: 'Merge robe070/cookbooks repo patch/paas to support/scalable'
#       inputs:
#         targetType: filePath
#         filePath: './$(System.DefaultWorkingDirectory)/_robe070_cookbooks/scripts/GitMerge.ps1'
#         arguments: '-GitRepoName ''$(CookbooksSourceAlias)'' -GitSourceBranch ''$(CookbooksBranchPreview)'' -GitTargetBranch ''$(CookbooksBranchProduction)'''
#         pwsh: true
      
#     - task: PowerShell@2
#       displayName: 'Write access to Templates Marketplace Branch'
#       inputs:
#         targetType: filePath
#         filePath: './$(System.DefaultWorkingDirectory)/_robe070_cookbooks/scripts/GitRepoWriteAccess.ps1'
#         arguments: '-GitBranch ''$(GitLansaAwsTemplatesMarketPlaceBranch)'' -GitURL ''https://$(GitLansaAwsTemplatesPAT):x-oauth-basic@$(GitLansaAwsTemplatesGitHubName)'' -GitUserEmail ''$(GitRepoUserEmail)'' -GitUserName ''$(GitRepoUserName)'' -GitRepoName ''$(GitLansaAwsTemplatesRepoName)'''
#         pwsh: true
      
#     - task: PowerShell@2
#       displayName: 'Tag Templates Marketplace Branch'
#       inputs:
#         targetType: filePath
#         filePath: './$(System.DefaultWorkingDirectory)/_robe070_cookbooks/scripts/GitTag.ps1'
#         arguments: '-GitRepoName ''$(GitLansaAwsTemplatesRepoName)'' -Tags ''AWSTemplate-Bld-$(Build.BuildId)-$(Release.ReleaseName)-$(Gate.version)-mp'''
#         pwsh: true
      
#     - task: PowerShell@2
#       displayName: 'Write access to Templates Support Branch'
#       inputs:
#         targetType: filePath
#         filePath: './$(System.DefaultWorkingDirectory)/_robe070_cookbooks/scripts/GitRepoWriteAccess.ps1'
#         arguments: '-GitBranch ''$(GitLansaAwsTemplatesBranch)'' -GitURL ''https://$(GitLansaAwsTemplatesPAT):x-oauth-basic@$(GitLansaAwsTemplatesGitHubName)'' -GitUserEmail ''$(GitRepoUserEmail)'' -GitUserName ''$(GitRepoUserName)'' -GitRepoName ''$(GitLansaAwsTemplatesSupportRepoName)'''
#         pwsh: true
      
#     - task: PowerShell@2
#       displayName: 'Tag Templates Support Branch'
#       inputs:
#         targetType: filePath
#         filePath: './$(System.DefaultWorkingDirectory)/_robe070_cookbooks/scripts/GitTag.ps1'
#         arguments: '-GitRepoName ''$(GitLansaAwsTemplatesSupportRepoName)'' -Tags ''AWSTemplate-Bld-$(Build.BuildId)-$(Release.ReleaseName)-$(Gate.version)'''
#         pwsh: true

# - template: AzureDevOps/templates/TestPublishTemplate1.yml
#   parameters:
#     stageName: StockholmProd_w16d_14_2
#     stagedisplayName: Stockholm Prod w16d-14-2
#     dependsOn: MergeAndTag
#     jobName: AgentJob_Stockholm_Deployment_Test 
#     jobDisplayname: 'Agent job : Stockholm Deployment Test'
#     baseImageName: w16d-14-2
#     stackName: Stockholm-Prod
#     LansaVersion: $(LansaVersionPrevious)
#     WebserverOSVersion: $(WebserverOSPreviousVersionValue)

# - template: AzureDevOps/templates/TestPublishTemplate1.yml
#   parameters:
#     stageName: IrelandProd_w16d_15_0
#     stagedisplayName: Ireland Prod w16d-15-0
#     dependsOn: MergeAndTag
#     jobName: AgentJob_Ireland_Deployment_Test  
#     jobDisplayname: 'Agent job : Ireland - Deployment Test'
#     baseImageName: w16d-15-0
#     stackName: Ireland-Prod
#     LansaVersion: $(LansaVersion)
#     WebserverOSVersion: $(WebserverOSPreviousVersionValue)

# - template: AzureDevOps/templates/TestPublishTemplate1.yml
#   parameters:
#     stageName: SydneyProd_w19d_14_2 
#     stagedisplayName: Sydney Prod w19d-14-2
#     dependsOn: MergeAndTag
#     jobName: AgentJob_Sydney_Deployment_Test  
#     jobDisplayname: 'Agent job : Sydney Deployment Test'
#     baseImageName: w19d-14-2
#     stackName: Sydney-Prod
#     LansaVersion: $(LansaVersionPrevious))
#     WebserverOSVersion: $(WebserverOSLatestVersionValue)

# - template: AzureDevOps/templates/TestPublishTemplate1.yml
#   parameters:
#     stageName: Ohio_Prod_w19d_15_0
#     stagedisplayName: Ohio Prod w19d-15-0
#     dependsOn: MergeAndTag
#     jobName: AgentJob_US_useast2_Deployment_Test  
#     jobDisplayname: 'Agent job : US [us-east-2] Deployment Test'
#     baseImageName: w19d-15-0
#     stackName: Ohio-Prod
#     LansaVersion: $(LansaVersion)
#     WebserverOSVersion: $(WebserverOSLatestVersionValue)

# - template: AzureDevOps/templates/TestPublishTemplate1.yml
#   parameters:
#     stageName: Frankfurt_Prod_w16d_14_2j
#     stagedisplayName: Frankfurt Prod w16d-14-2j
#     dependsOn: MergeAndTag
#     jobName: AgentJob_Frankfurt_Deployment_Test  
#     jobDisplayname: 'Agent job : Frankfurt Deployment Test'
#     baseImageName: w16d-14-2j
#     stackName: Frankfurt-Prod
#     LansaVersion: $(LansaVersionPrevious)
#     WebserverOSVersion: $(WebserverOSJpnPreviousVersionValue)

# - template: AzureDevOps/templates/TestPublishTemplate1.yml
#   parameters:
#     stageName: CanadaProd_w19d_14_2j
#     stagedisplayName: Canada Prod w19d-14-2j
#     dependsOn: MergeAndTag
#     jobName: AgentJob_Canada_ca_central_1_Deployment_Test_tral 
#     jobDisplayname: 'Agent job : Canada (ca-central-1)- Deployment Test tral'
#     baseImageName: w19d-14-2j
#     stackName: Canada-Prod
#     LansaVersion: $(LansaVersionPrevious)
#     WebserverOSVersion: $(WebserverOSJpnLatestVersionValue)

# - template: AzureDevOps/templates/TestPublishTemplate1.yml
#   parameters:
#     stageName: Milan_Prod_w16d_14_2j
#     stagedisplayName: Milan Prod w16d-14-2j
#     dependsOn: MergeAndTag
#     jobName: AgentJob_Milan_Deployment_Test  
#     jobDisplayname: 'Agent job : Milan Deployment Test '
#     baseImageName: w16d-14-2j
#     stackName: Milan-Prod
#     LansaVersion: $(LansaVersionPrevious)
#     WebserverOSVersion: $(WebserverOSJpnPreviousVersionValue)

# - template: AzureDevOps/templates/TestPublishTemplate1.yml
#   parameters:
#     stageName: Bahrain_Prod_w19d_15_0j
#     stagedisplayName: Bahrain Prod w19d-15-0j
#     dependsOn: MergeAndTag
#     jobName: AgentJob_Bahrain_Deployment_Test 
#     jobDisplayname: 'Agent job : Bahrain Deployment Test'
#     baseImageName: w19d-15-0j
#     stackName: Bahrain-Prod
#     LansaVersion: $(LansaVersion)
#     WebserverOSVersion: $(WebserverOSJpnLatestVersionValue)
